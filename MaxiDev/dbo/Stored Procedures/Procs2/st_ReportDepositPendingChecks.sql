 /********************************************************************
<Author>Not Known</Author>
<app>Maxi WinServices CollectionReport</app>
<Description></Description>

<ChangeLog>
<log Date="15/07/2020" Author="bortega">Ticket 2072 Autogenerated Reports - Collection Report. Req:: 00197</log>
</ChangeLog>
********************************************************************/
CREATE Procedure [dbo].[st_ReportDepositPendingChecks]      
 (      
	 @StartDate Datetime,      
	 @EndDate Datetime      
 )
       
 AS

-- -----------------
 SET  TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
 SET NOCOUNT ON; 
-- -----------------

Begin try
--DECLARE @StartDate DATETIME      
--DECLARE @EndDate DATETIME      

--    SET @StartDate = '2016-06-13'
--    SET @EndDate = '2016-06-14'

  
			
       --Req:: 00197
		SET @StartDate = dbo.RemoveTimeFromDatetime(@StartDate)      
		--SET @EndDate =dbo.RemoveTimeFromDatetime(@EndDate+1)      
		DECLARE @HourNow varchar(50)
		set @HourNow = (select CONVERT(VARCHAR(12), GETDATE(), 114) AS [HH:MI:SS:MMM(24H)])
		--set @HourNow = '09:00:00.000'
	   
		if(@HourNow >= '01:10:00' AND @HourNow < '09:00:00')
			BEGIN
				SET @EndDate =dbo.RemoveTimeFromDatetime(@EndDate) 
		   END
		ELSE
			BEGIN
				SET @EndDate =dbo.RemoveTimeFromDatetime(@EndDate+1) 
			END
		--Req:: 00197

    	  SELECT
			 ck.DateOfMovement as Entry, 
			 B.AgentCode +' '+B.AgentName Agent, 
			 ck.Amount Amount,    
			 'By Scanner Process, Check Number: '+  isnull(convert(varchar, ck.CheckNumber),'-')  Notes,  
			 ck.DateStatusChange as Date,     
			 case 
				when IdCheckProcessorBank=1 then'Wells Fargo Sub Account' 
				when IdCheckProcessorBank=2 then'Southside Bank, 1518801' 
				when IdCheckProcessorBank=3 then'Bank of Texas'				 
				when IdCheckProcessorBank=4 then'First Midwest Bank'
			 end BankName ,	
			 U.UserName,   	 	  	    
			 'CHECK' as MoveType,
			 'Credit' as DebitOrCredit
	    FROM Checks ck (nolock)
	   --INNER JOIN AgentBalance AB 
	   --   ON ck.IdCheck = ab.idtransfer
	   INNER JOIN Agent B (nolock)
	      ON ck.IdAgent=B.IdAgent   
	   INNER JOIN users U (nolock)
	      ON U.IdUser= ck.EnteredByIdUser

	   WHERE ck.IdStatus = 20
	     --AND ab.TypeOfMovement = 'CH'
		 AND ck.BachCode is null
	     AND ck.DateStatusChange > @StartDate 
	     AND ck.DateStatusChange < @EndDate  

----------------------------------Cheques cargados en bach - pagados

       UNION	

	  SELECT
			 MAX(ck.DateOfMovement) as Entry, 
			 MAX(B.AgentCode) +' '+MAX(B.AgentName) Agent, 
			 SUM(ck.Amount) Amount,    
			 dbo.[fn_GetDetailNumberCheckBach] (ck.BachCode, IdCheckProcessorBank)  Notes,  
			 MAX(ck.DateStatusChange) as Date,     
			 case 
				when IdCheckProcessorBank=1 then'Wells Fargo Sub Account' 
				when IdCheckProcessorBank=2 then'Southside Bank, 1518801' 
				when IdCheckProcessorBank=3 then'Bank of Texas' 
				else ''
			 end BankName ,	
			 MAX(U.UserName),   	 	  	    
			 'CHECK' as MoveType,
			 'Credit'as DebitOrCredit
	    FROM Checks ck (nolock)
	   --INNER JOIN AgentBalance AB 
	   --   ON ck.IdCheck = ab.idtransfer
	   INNER JOIN Agent B (nolock)
	      ON ck.IdAgent=B.IdAgent   
	   INNER JOIN users U (nolock)
	      ON U.IdUser= ck.EnteredByIdUser

	   WHERE ck.IdStatus = 20
	     AND ck.BachCode IS NOT NULL
	     --AND ab.TypeOfMovement = 'CH'
	     AND ck.DateStatusChange > @StartDate 
	     AND ck.DateStatusChange < @EndDate  

	   GROUP BY BachCode, IdCheckProcessorBank

End try
Begin Catch    
DECLARE @ErrorMessage varchar(max)                                                                 
    Select @ErrorMessage=ERROR_MESSAGE()   
    Insert into ErrorLogForStoreProcedure (StoreProcedure,ErrorDate,ErrorMessage)Values('st_ReportDepositPendingChecks',Getdate(),@ErrorMessage)
End catch


